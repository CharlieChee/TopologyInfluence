import numpy as np
import matplotlib.pyplot as plt
import numpy as np
from scipy.integrate import simps
def read_from_files(file_name):
    result = []
    with open(file_name, "r") as file:
        for line in file:
            # 去除字符串两端的空白字符，并将其解析为列表
            result.append(eval(line.strip()))
    return result

# Read data for std and convergence rate
a1_std = read_from_files("/Users/jichanglong/Desktop/pythonProject1/a1.txt")
'''
a2_std = read_from_files("/Users/jichanglong/Desktop/pythonProject1/a2.txt")
a1_convergence_rate = read_from_files("/Users/jichanglong/Desktop/pythonProject1/powerlaw_normal_convergence_rate.txt")
a2_convergence_rate = read_from_files("/Users/jichanglong/Desktop/pythonProject1/poisson_normal_convergence_rate.txt")
'''
a1_fiedler = [0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488, 0.5718075068280192, 0.31897503240933406, 0.3565099587586157, 0.5776369698857341, 0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488, 0.5718075068280192, 0.31897503240933406, 0.3565099587586157, 0.5776369698857341, 0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488, 0.5718075068280192, 0.31897503240933406, 0.3565099587586157, 0.5776369698857341, 0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488, 0.5718075068280192, 0.31897503240933406, 0.3565099587586157, 0.5776369698857341, 0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488, 0.5718075068280192, 0.31897503240933406, 0.3565099587586157, 0.5776369698857341, 0.30707351382694087, 0.46372926966411254, 0.30751200786316846, 0.4557084478523481, 0.4880386322977488]
a2_fiedler = [0.18932940915319402, 0.1115152616963163, 0.1576707166023417, 0.1893294091531943, 0.189329409153194, 0.18932940915319363, 0.15767071660234114, 0.15767071660234172, 0.189329409153194, 0.18932940915319416, 0.18932940915319407, 0.18932940915319368, 0.1576707166023416, 0.18932940915319413, 0.15767071660234172, 0.15767071660234125, 0.18932940915319416, 0.18932940915319385, 0.46070387121007367, 0.18932940915319427, 0.1893294091531942, 0.15767071660234136, 0.15767071660234128, 0.1576707166023411, 0.15767071660234164, 0.15767071660234125, 0.1893294091531941, 0.18932940915319374, 0.18932940915319382, 0.15767071660234147, 0.15767071660234178, 0.15767071660234114, 0.15767071660234158, 0.15767071660234128, 0.15767071660234114, 0.45570844785234743, 0.18932940915319385, 0.15418814374786968, 0.15767071660234136, 0.11151526169631676, 0.15767071660234122, 0.1893294091531941, 0.15767071660234158, 0.4557084478523472, 0.18932940915319402, 0.15767071660234214, 0.11151526169631647, 0.15767071660234172, 0.18932940915319432, 0.1554076844742879]
random = [0.1487198096474689, 0.1470222364025098, 0.1679099801078382, 0.11509920626924076, 0.15430087663536837, 0.07933846120154336, 0.19983206928652264, 0.22517289455755488, 0.19531312634742473, 0.1527161270240844, 0.12284994775475218, 0.1672318858743378, 0.23401545958638464, 0.14541952968482671, 0.1788191650865162, 0.12012709679606325, 0.21226397645541348, 0.15126359681597096, 0.1761597602882015, 0.08323263704479132, 0.09552998236664471, 0.22255193701542927, 0.16658211201196338, 0.25685202880442853, 0.20141438235967116, 0.1598639704592605, 0.2380168630946799, 0.23579617162576832, 0.1168506396322637, 0.23260036247791988, 0.19792401493620654, 0.10443265590336746, 0.20269008577363198, 0.13528601773106777, 0.17303679891397555, 0.1513536326726672, 0.22438452348798965, 0.15829660277896376, 0.20344504356746707, 0.2124748733271107, 0.1468904192099406, 0.1377935983031858, 0.24158379364467933, 0.15992138919362867, 0.12287608616853721, 0.14923798863809717, 0.18482649006193447, 0.2219397409692825, 0.24680817568197058, 0.263780750889286, 0.11317385587533717, 0.20857272499053994, 0.08410575824471238, 0.20808046007203207, 0.19462485103110969, 0.16559051461403926, 0.21265494378636954, 0.17594600990879233, 0.20350490607200283, 0.1599832584351983, 0.07465533112320794, 0.17625414241628648, 0.13946621537101078, 0.06622896974803383, 0.2215579603248765, 0.1928751634326593, 0.16373830914963405, 0.06977006114095018, 0.18323608137209366, 0.11109454713003969, 0.107975288927984, 0.16786459931601508, 0.1881620358844485, 0.1488770966036112, 0.2126997023522088, 0.17401516828707222, 0.15078276634987237, 0.1792985923069098, 0.1668266145153623, 0.22030588489702493, 0.1639226085751812, 0.11958354134049148, 0.19821356261989317, 0.11906177780158766, 0.17079296061948637, 0.1541306036579729, 0.07689932065176118, 0.20338143915840032, 0.19870276470400208, 0.11055696425225128, 0.11613060929755747, 0.1488608642427981, 0.140819151696538, 0.155479060054848, 0.2303014005919942, 0.24623094127764483, 0.19608823928863514, 0.19023234513527723, 0.0624689011760996, 0.2503166069947533]

speed = []
for i in a1_std:
    speed.append(1/np.mean(i))

plt.scatter(random,speed, marker='o', color='b', label='Data Points')

# 添加图表标题和坐标轴标签
plt.title('Scatter Plot of 50 Data Points')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')

# 显示图例
plt.legend()

# 显示图像
plt.show()
